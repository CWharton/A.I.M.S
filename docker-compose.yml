# 1. Update config values
# 2. Set APP_ENV environment variable to proper value
#    export APP_ENV=development
#    set APP_ENV=development (Windows)
# 3. Run docker-compose build
# 4. Run docker-compose up
# 5. Ready to Rock and Roll

version: '3.5'

services:
  postgres:
    container_name: aims-postgres
    restart: always
    image: postgres:latest
    security_opt:
      - apparmor:unconfined
    ports:
      - "5432:5432"
    env_file:
      - ./.docker/env/postgres.${APP_ENV}.env

  aims-nginx:
    image: nginx:latest
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./static:/var/www/public/static
      - ./.docker/config/nginx.conf:/etc/nginx/nginx.conf:ro
    links:
      - aims1:aims1
    depends_on:
      - aims1

  aims1:
    container_name: aims-app-1
    restart: always
    build:
      context: .
      dockerfile: ./.docker/aims.dockerfile
    security_opt:
      - apparmor:unconfined
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    working_dir: /code
    env_file:
      - ./.docker/env/app.${APP_ENV}.env
    links:
      - postgres:postgres
    depends_on:
      - postgres
